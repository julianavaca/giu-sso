apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'sonar-runner'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply plugin: "jacoco"
apply plugin: 'maven'
apply plugin: 'docker'

group = 'com.giu.gcba'
version = '0.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    nexusUser = "admin"
    nexusPassword = "R3dB33575"
    nexusUrl = "http://repo.dev.redbee.io:80/content/repositories/releases/"
    nexusSnapshot = "http://repo.dev.redbee.io:80/content/repositories/snapshots/"
}

buildscript {
    ext {
        springBootVersion = '1.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

task uploadNexus() {
    if(project.hasProperty('release')){
        println 'Release'
        project.version = project.release
    }
}

uploadArchives.dependsOn('uploadNexus')

jar {
    baseName = 'giu-oauth'
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
    maven {
        credentials {
            username "${nexusUser}"
            password "${nexusPassword}"
        }
        url "${nexusUrl}"
    }
    maven {
        credentials {
            username "${nexusUser}"
            password "${nexusPassword}"
        }
        url "${nexusSnapshot}"
    }
}

dependencies {

    testCompile 'junit:junit:4.8.2'
    testCompile 'org.mockito:mockito-core:1.+'
    compile 'org.springframework:spring-context:4.1.6.RELEASE'

    compile("org.springframework.security:spring-security-ldap")
    compile("org.springframework:spring-tx")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.security.oauth:spring-security-oauth2:2.0.8.RELEASE")
    compile 'org.springframework.data:spring-data-redis:1.6.2.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'redis.clients:jedis:2.8.0'
    compile 'com.zaxxer:HikariCP:2.4.3'

    compile 'org.springframework.session:spring-session:1.0.2.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-redis'

    //Oracle dependencies
    compile "oracle:oracle:1.4:Production"

    //Test dependencies
    testCompile 'cglib:cglib-nodep:3.1'
    testCompile ('org.spockframework:spock-core:1.0-groovy-2.4'){
        exclude group: 'org.codehaus.groovy', module: 'groovy-all'
    }
    testCompile 'org.codehaus.groovy:groovy-all:2.4.1'
    testCompile("org.springframework.boot:spring-boot-starter-test")

    compile 'net.logstash.logback:logstash-logback-encoder:4.5.1'
}

/*sonarRunner {
    sonarProperties {
        property 'sonar.projectKey', 'giu-oauth'
        property 'sonar.projectName', 'giu-oauth'

        property 'sonar.host.url', 'http://argalephdockerci2:9997'
        property 'sonar.jdbc.url', 'jdbc:mysql://argalephdockerci2:3307/sonar'
        property 'sonar.jdbc.driverClassName', 'com.mysql.jdbc.Driver'
        property 'sonar.jdbc.username', 'sonar'
        property 'sonar.jdbc.password', '123qwe'

        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.exclusions", "src/main/java/com/turner/configuration/*.java, " +
                "**//*Application.java, " +
                "src/main/java/com/turner/domain/*.java, " +
                "src/main/java/com/turner/JdbcAuthoritiesPopulator.java"
    }
}*/

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${nexusUrl}") {
                authentication(userName: "${nexusUser}",
                        password: "${nexusPassword}")
            }
            snapshotRepository(url: "${nexusSnapshot}") {
                authentication(userName: "${nexusUser}",
                        password: "${nexusPassword}")
            }
        }
    }
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4'
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-config:1.0.2.RELEASE'
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/jacocoHtml"
    }
}

docker {
    baseImage("java:8")
    maintainer("Redbee")
}

task buildDocker(type: Docker, dependsOn: build) {
    push = false
    dryRun = true
    applicationName = jar.baseName

    //dockerfile = file('src/main/docker/Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }

    volume("/tmp", "/newrelic", "/log")
    addFile("${jar.baseName}-${project.version}.jar", "app.jar")
    runCommand("bash -c 'touch /app.jar'")
    entryPoint(["java","-Djava.security.egd=file:/dev/./urandom", "-javaagent:/newrelic/newrelic.jar","-jar","/app.jar"])
}


bootRun {
    jvmArgs = ["-Dspring.profiles.active=test"]
}


